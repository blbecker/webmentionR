name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '1.23.2'

      - name: Run Linter
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '1.23.2'

      - name: Run Tests with Coverage
        run: |
          mkdir -p coverage
          go test -coverprofile=coverage/coverage.out ./...

      - name: Upload Test Coverage
        uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
        with:
          name: coverage-report
          path: coverage/coverage.out

  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@a94a3b62ee018ef5346cb08fd0d63d93811fe691 # v3.0.0
        with:
          versionSpec: '6.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@a94a3b62ee018ef5346cb08fd0d63d93811fe691 # v3.0.0
        with:
          useConfigFile: true

      - name: Set Version Output
        run: echo "VERSION=${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_ENV
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@83373cf2f8c4db6e24b41c1a9b086bb9619e9cd3 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, calculate-version, gitleaks]

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '1.23.2'

      - name: Build CLI Binary
        run: |
          mkdir -p dist
          go build -o dist/mentionR

      - name: Upload Build Artifact
        uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
        with:
          name: cli-binary
          path: dist/mentionR

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, calculate-version]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: cli-binary
          path: dist

      - name: Tag Repo
        uses: richardsimko/update-tag@e173a8ef8f54ab526a91dad6139a25efed62424c # v1
        with:
          tag_name: v${{needs.calculate-version.outputs.fullSemVer}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2
        with:
          draft: false
          prerelease: false
          tag_name: "v${{needs.calculate-version.outputs.fullSemVer}}"
          name: "Release v${{needs.calculate-version.outputs.fullSemVer}}"
          files: |
            dist/mentionR